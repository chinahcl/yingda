"""
Django settings for DjangoTest project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import time

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm78+rfx7iu@pu$4+l6s2bre9opld$6ew2_s06q*vg+eccbyk&('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1','172.20.10.11','172.20.10.8']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'polls',
    'corsheaders',
    'login',
    'register',
    'first_app',
    'api',
    'resources',
    'funit',
    'rest_framework',
    'posts',
    'robot',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DjangoTest.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoTest.wsgi.application'
APPEND_SLASH=False

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

TEMPLATE_DIRS = (os.path.join(BASE_DIR,  'templates'),)
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = (
				'DELETE',
				'GET',
				'OPTIONS',
				'PATCH',
				'POST',
				'PUT',
				)

CORS_ALLOW_HEADERS = (
				'accept-encoding',
				'authorization',
				'content-type',
				'dnt',
				'origin',
				'user-agent',
				'x-csrftoken',
				'x-requested-with',
			)
JWT_TOKEN_KEY='1234567'

MEDIA_ROOT = os.path.join(BASE_DIR, "upload/")
MEDIA_URL = "/upload/"

TODAY_LOG = time.strftime("%Y-%m-%d",time.localtime())
TODAY_LOG_NAME =TODAY_LOG+'_log.log'
TODAY_ERROR_LOG_NAME =TODAY_LOG+'_error.log'


LOGGING = { 'version': 1,
            'disable_existing_loggers': True,
# 格式配置
            'formatters':
                { 'simple': {
                    'format': '%(asctime)s %(module)s.%(funcName)s: %(message)s',
                    'datefmt': '%Y-%m-%d %H:%M:%S',
                },
                'verbose': {
                    'format': ('%(asctime)s %(levelname)s [%(process)d-%(threadName)s] ' '%(module)s.%(funcName)s line %(lineno)d: %(message)s'),
                    'datefmt': '%Y-%m-%d %H:%M:%S',
                }
                },
# Handler 配置
            'handlers': {
                'console': {
                    'class': 'logging.StreamHandler',
                    'level': 'DEBUG' if DEBUG else'WARNING'
                },
#⼆、缓存处理1. 缓存⼀般处理流程2. Django 的默认缓存接⼝
            'info': {
                'class': 'logging.handlers.TimedRotatingFileHandler',
                'filename': BASE_DIR+'/logs/'+TODAY_LOG_NAME, # ⽇志保存路径
                # 'filename': f'{BASE_DIR}/logs/info.log', # ⽇志保存路径
                'when': 'D', # 每天切割⽇志
                'backupCount': 30, # ⽇志保留 30 天
                'formatter': 'simple',
                'level': 'INFO',
            },
            'error': {
                'class': 'logging.handlers.TimedRotatingFileHandler',
                'filename': BASE_DIR+'/logs/'+TODAY_ERROR_LOG_NAME, # ⽇志保存路径
                # 'filename': f'{BASE_DIR}/logs/error.log', # ⽇志保存路径
                'when': 'W0', # 每周⼀切割⽇志
                'backupCount': 4, # ⽇志保留 4 周
                'formatter': 'verbose',
                'level': 'WARNING',
            }
            },
# Logger 配置
            'loggers': {
                'django': {
                    'handlers': ['console'],
                },
                'inf': {
                    'handlers': ['info'],
                    'propagate': True,
                    'level': 'INFO',
                },
                'err': {
                    'handlers': ['error'],
                    'propagate': True,
                    'level': 'WARNING',
                }
            }
            }
